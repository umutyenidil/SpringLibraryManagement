services:
  postgres:
    container_name: lm_postgres
    image: postgres
    environment:
      POSTGRES_USER: umut
      POSTGRES_PASSWORD: umut
      PGDATA: /var/lib/postgresql/data
    volumes:
      - lm_postgres_data:/var/lib/postgresql/data
      - ./docker:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    restart: unless-stopped

  zipkin:
    container_name: lm_zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - lm_network

  config-server:
    container_name: lm_config_server
    build: ./services/config-server
    ports:
      - "8081:8081"
    networks:
      - lm_network
    depends_on:
      - postgres

  discovery-server:
    container_name: lm_discovery_server
    build: ./services/discovery
    ports:
      - "8761:8761"
    networks:
      - lm_network
    depends_on:
      - config-server

  user-service:
    container_name: lm_user_service
    build: ./services/user
    ports:
      - "8084:8084"
    networks:
      - lm_network
    depends_on:
      - config-server
      - discovery-server
      - postgres

  book-service:
    container_name: lm_book_service
    build: ./services/book
    ports:
      - "8083:8083"
    networks:
      - lm_network
    depends_on:
      - config-server
      - discovery-server
      - postgres

  cloud-gateway:
    container_name: lm_gateway
    build: ./services/gateway
    ports:
      - "8080:8080"
    networks:
      - lm_network
    depends_on:
      - config-server
      - discovery-server
      - user-service
      - book-service

networks:
  lm_network:
    driver: bridge

volumes:
  lm_postgres_data: